<!-- src/views/dashboard.ejs -->
<!DOCTYPE html>
<html>
  <head>
    <title>Dashboard</title>
    <link
      href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css"
      rel="stylesheet"
    />
  </head>
  <body class="bg-gray-100">
    <nav class="bg-white shadow-lg">
      <div class="max-w-7xl mx-auto px-4">
        <div class="flex justify-between h-16">
          <div class="flex items-center">
            <h1 class="text-xl font-bold">File Drive</h1>
          </div>
          <div class="flex items-center">
            <span class="mr-4"><%= user.email %></span>
            <form action="/auth/logout" method="POST">
              <button
                type="submit"
                class="bg-red-500 hover:bg-red-700 text-white font-bold py-2 px-4 rounded"
              >
                Logout
              </button>
            </form>
          </div>
        </div>
      </div>
    </nav>

    <div class="max-w-7xl mx-auto px-4 py-6">
      <!-- Create Folder Button -->
      <button
        onclick="showCreateFolderModal()"
        class="bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mb-6"
      >
        Create Folder
      </button>

      <!-- Upload File Button -->
      <button
        onclick="document.getElementById('fileInput').click()"
        class="bg-green-500 hover:bg-green-700 text-white font-bold py-2 px-4 rounded mb-6 ml-4"
      >
        Upload File
      </button>
      <input
        type="file"
        id="fileInput"
        class="hidden"
        onchange="uploadFile(this)"
      />

      <!-- Folders Section -->
      <div class="grid grid-cols-1 md:grid-cols-3 gap-4 mb-8">
        <% folders.forEach(function(folder) { %>
        <div class="bg-white rounded-lg shadow-md p-4">
          <div class="flex justify-between items-center">
            <h3 class="text-lg font-semibold"><%= folder.name %></h3>
            <div class="flex space-x-2">
              <button
                onclick="showShareModal('<%= folder.id %>')"
                class="text-blue-500 hover:text-blue-700"
              >
                Share
              </button>
              <button
                onclick="deleteFolder('<%= folder.id %>')"
                class="text-red-500 hover:text-red-700"
              >
                Delete
              </button>
            </div>
          </div>
          <div class="mt-4">
            <% folder.files.forEach(function(file) { %>
            <div class="flex justify-between items-center py-2 border-b">
              <span><%= file.name %></span>
              <div class="flex space-x-2">
                <a
                  href="/files/<%= file.id %>/download"
                  class="text-blue-500 hover:text-blue-700"
                  >Download</a
                >
                <button
                  onclick="deleteFile('<%= file.id %>')"
                  class="text-red-500 hover:text-red-700"
                >
                  Delete
                </button>
              </div>
            </div>
            <% }) %>
          </div>
        </div>
        <% }) %>
      </div>
    </div>

    <!-- Create Folder Modal -->
    <div
      id="createFolderModal"
      class="fixed inset-0 bg-gray-600 bg-opacity-50 hidden"
    >
      <div class="flex items-center justify-center min-h-screen">
        <div class="bg-white p-8 rounded-lg shadow-md w-96">
          <h2 class="text-xl font-bold mb-4">Create New Folder</h2>
          <input
            type="text"
            id="folderName"
            class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 mb-4"
            placeholder="Folder Name"
          />
          <div class="flex justify-end space-x-2">
            <button
              onclick="closeCreateFolderModal()"
              class="bg-gray-500 hover:bg-gray-700 text-white font-bold py-2 px-4 rounded"
            >
              Cancel
            </button>
            <button
              onclick="createFolder()"
              class="bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded"
            >
              Create
            </button>
          </div>
        </div>
      </div>
    </div>

    <!-- Share Folder Modal -->
    <div
      id="shareFolderModal"
      class="fixed inset-0 bg-gray-600 bg-opacity-50 hidden"
    >
      <div class="flex items-center justify-center min-h-screen">
        <div class="bg-white p-8 rounded-lg shadow-md w-96">
          <h2 class="text-xl font-bold mb-4">Share Folder</h2>
          <input
            type="text"
            id="shareDuration"
            class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 mb-4"
            placeholder="Duration (e.g., 1d, 7d)"
          />
          <div class="flex justify-end space-x-2">
            <button
              onclick="closeShareModal()"
              class="bg-gray-500 hover:bg-gray-700 text-white font-bold py-2 px-4 rounded"
            >
              Cancel
            </button>
            <button
              onclick="shareFolder()"
              class="bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded"
            >
              Share
            </button>
          </div>
        </div>
      </div>
    </div>

    <script>
      let currentFolderId = null;

      function showCreateFolderModal() {
        document.getElementById("createFolderModal").classList.remove("hidden");
      }

      function closeCreateFolderModal() {
        document.getElementById("createFolderModal").classList.add("hidden");
      }

      function showShareModal(folderId) {
        currentFolderId = folderId;
        document.getElementById("shareFolderModal").classList.remove("hidden");
      }

      function closeShareModal() {
        document.getElementById("shareFolderModal").classList.add("hidden");
        currentFolderId = null;
      }

      async function createFolder() {
        const name = document.getElementById("folderName").value;
        try {
          const response = await fetch("/folders", {
            method: "POST",
            headers: {
              "Content-Type": "application/json",
            },
            body: JSON.stringify({ name }),
          });
          if (response.ok) {
            window.location.reload();
          }
        } catch (error) {
          console.error("Error creating folder:", error);
        }
      }

      async function shareFolder() {
        const duration = document.getElementById("shareDuration").value;
        try {
          const response = await fetch(`/folders/${currentFolderId}/share`, {
            method: "POST",
            headers: {
              "Content-Type": "application/json",
            },
            body: JSON.stringify({ duration }),
          });
          if (response.ok) {
            const { shareUrl } = await response.json();
            alert(`Share URL: ${shareUrl}`);
            closeShareModal();
          }
        } catch (error) {
          console.error("Error sharing folder:", error);
        }
      }

      async function uploadFile(input) {
        const file = input.files[0];
        if (!file) return;

        const formData = new FormData();
        formData.append("file", file);

        try {
          const response = await fetch("/files/upload", {
            method: "POST",
            body: formData,
          });
          if (response.ok) {
            window.location.reload();
          }
        } catch (error) {
          console.error("Error uploading file:", error);
        }
      }

      async function deleteFolder(folderId) {
        if (!confirm("Are you sure you want to delete this folder?")) return;

        try {
          const response = await fetch(`/folders/${folderId}`, {
            method: "DELETE",
          });
          if (response.ok) {
            window.location.reload();
          }
        } catch (error) {
          console.error("Error deleting folder:", error);
        }
      }

      async function deleteFile(fileId) {
        if (!confirm("Are you sure you want to delete this file?")) return;

        try {
          const response = await fetch(`/files/${fileId}`, {
            method: "DELETE",
          });
          if (response.ok) {
            window.location.reload();
          }
        } catch (error) {
          console.error("Error deleting file:", error);
        }
      }
    </script>
  </body>
</html>
